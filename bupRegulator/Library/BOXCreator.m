%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% BOXCreator - Создание опорных точек аварийного манёвра "Коробка"
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [BLU, BLD, BRU, BRD] = BOXCreator(TDP, BoxStep)
    %% Расшифровка переменных
    % BLU - Координата верхней левой точки квадрата
    % BLD - Координата нижней левой точки квадрата
    % BRU - Координата верхней правой точки квадрата
    % BRD - Координата нижней правой точки квадрата
    %% Расчитываем точки квадрата
    BLU=[0; 0; 0]; BLD = [0; 0; 0]; BRU = [0; 0; 0]; BRD=[0; 0; 0];
    % Вычисляем шаг в градусах по Широте (однозначно сопоставляются)
    LatStep = BoxStep/1000*360/40000;
    % Координаты по Широте
    BLU(1) = TDP(1) + LatStep;
    BLD(1) = TDP(1) - LatStep; 
    BRU(1) = TDP(1) + LatStep;
    BRD(1) = TDP(1) - LatStep; 
    % Вычисляем шаг по Долготе без учета поправки на Широту (долгота зависит от
    % широты), а поправку на широту будем делать прямо в выражении
    LonStep = BoxStep/1000*360/40000;
    % Координаты по Долготе
    BLU(2) = TDP(2) - LonStep/cos(pi*BLU(1)/180);
    BLD(2) = TDP(2) - LonStep/cos(pi*BLD(1)/180);
    BRU(2) = TDP(2) + LonStep/cos(pi*BRU(1)/180);
    BRD(2) = TDP(2) + LonStep/cos(pi*BRD(1)/180);
    %% Проверим выход точек за пределы координат
    BLU = PositionRangeConverting(BLU);
    BLD = PositionRangeConverting(BLD);
    BRU = PositionRangeConverting(BRU);
    BRD = PositionRangeConverting(BRD);
end
    

