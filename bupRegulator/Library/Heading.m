%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%   Heading - Вычисление курса
%   u0 - Координата точки относительно, которой вычисляем
%   u1 - Координата точки курс до которой, вычисляем
%   last_y - Возращаемое значение в случае, если расчет не удался
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function y = Heading(u1, u0, last_y)
    %% Высчитаем, как изменились координаты
    un = u1 - u0;
    d_lat = un(1);
    d_lon = un(2);
    %% Условие для определения кратчайшего пути с учетом переходов между
    % меридианами 0 и 180 по долготе
    if d_lon > 180
        d_lon = d_lon - 360;
    elseif d_lon < (-180)
            d_lon = d_lon +360;
    end
    %% Расчет курса
    un_pow1 = d_lat*d_lat;
    un_pow2 = d_lon*d_lon;
    if (un_pow1 < 1e-16) && (un_pow2 < 1e-16)
        y = last_y;
    else
        x = acos( d_lon / (sqrt(un_pow2 + un_pow1)));
        y = acos( d_lat / (sqrt(un_pow2 + un_pow1)));
        if x > pi/2
            y = 2*pi - y;
        end
    end
end